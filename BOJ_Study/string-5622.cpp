/*
알파벳에 해당하는 숫자는 배열에 알파벳 순서에 다른 번호를 넣어두고 찾는다
ns = "22233344455566677778889999";
	//ABCDEF...

문자는 아스키코드값이며 ABC 순서대로 위치하므로 
B의 경우 'A'-'A'=0, 'B'-'A'=1 이 된다
이 원리로 문자에 해당하는 배열값을 뽑아낼 수 있다

각 번호별 걸리는 시간은 아래와 같다
1을 거는데 걸리는 시간은 2초
2를 거는데 걸리는 시간은 2+1=3초
3을 거는데 걸리는 시간은 2+2=4초
4를 거는데 걸리는 시간은 3+2=5초
결국 n 번호를 거는데 걸리는 시간은 (n+1) 초가 된다
*/

#include <iostream>
using namespace std;

int main()
{
	int i, l, cn, n, sec = 0;

	// ABC 에 해당하는 순서로 있다고 가정하고 전화번호를 세팅
	string ns = "22233344455566677778889999";

	string wd;
	cin >> wd; // 전화번호 알파벳 단어를 입력받는다
	sec = 0; // 걸린 시간, 초기값 0
	l = wd.length(); // 단어길이
	for (i = 0; i < l; i++)
	{
		cn = wd[i] - 'A'; // 한 글자씩 문자를 인덱스 숫자로 변경해준다
		n = ns[cn] - '0'; // 문자숫자를 정수로 변경해준다 (예: '1'-'0'=1)
		sec += n + 1; // 걸리는 시간 (번호 +1) 을 더해준다
	}
	cout << sec; // 걸린 시간을 출력
	return 0;
}